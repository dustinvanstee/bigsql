-- Security Demo Script showing Row based filtering and column masking
--   Prereq : userids mngr1 and staff1 should be on the OS prior to running this script
--   Example
--     In OS add users ... (can be done using LDAP as well)
--		useradd -u 3000 mngr1
--		useradd -u 3001 staff1
--		useradd -u 3002 staff2
--		useradd -u 3003 staff3
--		echo passw0rd | passwd mngr1 --stdin
--		echo passw0rd | passwd staff1 --stdin
--		echo passw0rd | passwd staff2 --stdin
--		echo passw0rd | passwd staff3 --stdin

-- Now, 3 connections should be setup
-- 1. bigsql admin connections
-- 2. mngr1 connection
-- 3. staff1 connection


-- MAC hints ...
-- Hit F5 TO refresh SCHEMA!
-- CNTL + ENTER runs a line
-- Option  + x  runs a batch of lines

-- *** START BIGSQL CMDS ****
-- Setup - use bigsql admin connection for the following command
CREATE SCHEMA IF NOT EXISTS PRG

DROP TABLE PRG.CREDITCARD

-- Create a credit card table for the demo
CREATE HADOOP TABLE IF NOT EXISTS PRG.CREDITCARD
(CCARD_ID INT,
SSN VARCHAR(11),
CARDTYPE VARCHAR(15),
CARDNUMBER VARCHAR(16),
EXPMONTH INT,
EXPYEAR INT)
ROW FORMAT DELIMITED FIELDS TERMINATED BY ','
STORED AS TEXTFILE;

INSERT INTO PRG.CREDITCARD VALUES ( 1,'121-11-1111','MSCD','5555292233334444',12,2018);
INSERT INTO PRG.CREDITCARD VALUES ( 2,'222-45-2324','VISA','4944111192223333',12,2018);
INSERT INTO PRG.CREDITCARD VALUES ( 3,'224-34-3456','AMEX','3393111122226363',12,2018);
INSERT INTO PRG.CREDITCARD VALUES ( 4,'927-65-4321','DISC','7777911162293333',12,2018);
INSERT INTO PRG.CREDITCARD VALUES ( 5,'121-19-1191','MSCD','5555226233334444',12,2018);
INSERT INTO PRG.CREDITCARD VALUES ( 6,'232-45-2924','VISA','4444111122293333',12,2018);
INSERT INTO PRG.CREDITCARD VALUES ( 7,'224-34-3496','AMEX','3333191122229333',12,2018);
INSERT INTO PRG.CREDITCARD VALUES ( 8,'927-95-4321','DISC','7777916122223333',12,2018);
INSERT INTO PRG.CREDITCARD VALUES ( 9,'927-69-4321','DISC','7797111122223933',12,2018);
INSERT INTO PRG.CREDITCARD VALUES (10,'927-65-4991','DISC','7797161122223333',12,2018);
INSERT INTO PRG.CREDITCARD VALUES (11,'131-91-1111','MSCD','5595222933334444',12,2018);
INSERT INTO PRG.CREDITCARD VALUES (12,'222-45-2394','VISA','4444116122223933',12,2018);
INSERT INTO PRG.CREDITCARD VALUES (13,'294-34-3496','AMEX','3933611122223333',12,2018);
INSERT INTO PRG.CREDITCARD VALUES (14,'927-65-4321','DISC','7797111629223393',12,2018);
INSERT INTO PRG.CREDITCARD VALUES (15,'191-19-1911','MSCD','5555292236334444',12,2018);
INSERT INTO PRG.CREDITCARD VALUES (16,'232-45-2394','VISA','4944911122923333',12,2018);
INSERT INTO PRG.CREDITCARD VALUES (17,'224-34-3956','AMEX','3339111122223393',12,2018);
INSERT INTO PRG.CREDITCARD VALUES (18,'927-65-4321','DISC','7777111122223333',12,2018);


SELECT * FROM PRG.CREDITCARD

-- Create roles that we will use for mapping userids -> roles -> tables
-- Roles are analogous to groups ....
CREATE ROLE MANAGER_ROLE;
CREATE ROLE STAFF_ROLE;

-- Create table permissions for roles
GRANT SELECT ON PRG.CREDITCARD TO ROLE MANAGER_ROLE;
GRANT SELECT ON PRG.CREDITCARD TO ROLE STAFF_ROLE;

-- Assign users to roles ...
GRANT ROLE MANAGER_ROLE TO USER mngr1;
GRANT ROLE STAFF_ROLE TO USER staff1;
GRANT ROLE STAFF_ROLE TO USER staff2;
GRANT ROLE STAFF_ROLE TO USER staff3;

-- Column Masking Example
-- Managers can see SSN, Staff can see last 4 digits
CREATE MASK SSN_MASK ON PRG.CREDITCARD
    FOR COLUMN SSN RETURN
    CASE 
    WHEN VERIFY_ROLE_FOR_USER(SESSION_USER,'MANAGER_ROLE') = 1 
    THEN SSN
    ELSE CONCAT('XXX-XX-', SUBSTRING( SSN, 8, 4 ))
    END 
ENABLE; 

CREATE MASK CN_MASK ON PRG.CREDITCARD
    FOR COLUMN CARDNUMBER RETURN
    CASE 
    WHEN VERIFY_ROLE_FOR_USER(SESSION_USER,'MANAGER_ROLE') = 1 
    THEN CARDNUMBER
    ELSE CONCAT('XXXXXXXX', SUBSTRING( CARDNUMBER, 8, 4 ))
    END 
ENABLE; 

-- Important! this line is required for the settings to take effect
ALTER TABLE PRG.CREDITCARD ACTIVATE COLUMN ACCESS CONTROL;
-- *** END BIGSQL CMDS ****


-- Now Test .....
-- Connect as Manager 
SELECT * FROM PRG.CREDITCARD

-- Connect as Staff
SELECT * FROM PRG.CREDITCARD




-- *** START BIGSQL CMDS ****
-- Row based Access Control
-- Allow Manager to see all rows ...

CREATE PERMISSION CARD_LEVEL_ACCESS ON PRG.CREDITCARD
FOR ROWS WHERE
  VERIFY_ROLE_FOR_USER(SESSION_USER,'MANAGER_ROLE') = 1
  ENFORCED FOR ALL ACCESS
ENABLE;

CREATE PERMISSION VISA_ACCESS ON PRG.CREDITCARD
FOR ROWS WHERE
(
    VERIFY_ROLE_FOR_USER(SESSION_USER,'STAFF_ROLE') = 1 
    AND
    PRG.CREDITCARD.CARDTYPE = 'VISA'
)
ENFORCED FOR ALL ACCESS ENABLE;
ALTER TABLE PRG.CREDITCARD ACTIVATE ROW ACCESS CONTROL;
-- *** END BIGSQL CMDS ****

-- Now Test .....
-- Connect as Manager 
SELECT * FROM PRG.CREDITCARD ORDER BY CCARD_ID ASC

-- Connect as Staff
SELECT * FROM PRG.CREDITCARD ORDER BY CCARD_ID ASC


-- cleanup
DROP PERMISSION CARD_LEVEL_ACCESS;
DROP PERMISSION VISA_ACCESS;
DROP MASK CN_MASK;
DROP MASK SSN_MASK;
DROP ROLE MANAGER_ROLE;
DROP ROLE STAFF_ROLE;

